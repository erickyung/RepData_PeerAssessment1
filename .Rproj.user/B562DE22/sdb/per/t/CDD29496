{
    "contents" : "---\ntitle: \"Reproducible Research: Peer Assessment 1\"\noutput: \n  html_document:\n    keep_md: true\n---\n---\n  \n  \n## Loading and preprocessing the data\n```{r}\ndata <- read.table(unz(\"activity.zip\", \"activity.csv\"), sep = \",\", header = TRUE)\ndata$IsWeekend <- weekdays(as.Date(data$date)) %in% c(\"Saturday\", \"Sunday\")\ndata$IsWeekend <- factor(data$IsWeekend, labels = c(\"Weekday\", \"Weekend\"))\n```\n\n## What is mean total number of steps taken per day?\n```{r}\ntotalStepsPerDay <- aggregate(data$steps, by = list(data$date), FUN = sum)\nnames(totalStepsPerDay) <- c(\"date\", \"steps\")\n```\n```{r}\nhist(totalStepsPerDay$steps, breaks = 20, ylim = range(0, 10),\n     col = \"gray\", main = \"Histogram of Steps taken per day\", xlab = \"Steps\")\n```\n```{r, echo=FALSE}\nmeanStepsPerDay = mean(totalStepsPerDay$steps, na.rm = TRUE)\nmedianStepsPerDay = median(totalStepsPerDay$steps, na.rm = TRUE)\n```\n* The mean total number of steps taken per day is `r format(meanStepsPerDay, big.mark = \",\", nsmall = 2)`.  \n* The median total number of steps taken per day is `r format(medianStepsPerDay, big.mark = \",\")`.  \n\n## What is the average daily activity pattern?\n```{r}\ncleanData <- data[!is.na(data$steps), ]\nstepsPer5MinInterval <- aggregate(cleanData$steps, by = list(cleanData$interval), FUN = mean)\nnames(stepsPer5MinInterval) <- c(\"interval\", \"steps\")\n```\n```{r}\nwith(stepsPer5MinInterval, plot(interval, steps, type = \"l\", main = \"Average # of Steps per interval\",\n                                xlab = \"Interval\", ylab = \"Steps\", col = \"blue\"))\n```\n```{r, echo=FALSE}\nmaxSteps <- max(stepsPer5MinInterval$steps)\nmaxStepsInterval <- stepsPer5MinInterval[stepsPer5MinInterval$steps == maxSteps, ]$interval\n```\nThe 5-minute interval `r format(maxStepsInterval)`, on average across all the days in the dataset, contains the maximum number of steps, `r as.integer(maxSteps)` steps.  \n\n## Imputing missing values\n```{r, echo=FALSE}\nnumOfNARows <- nrow(data[is.na(data$steps), ])\npercentageOfNARows <- numOfNARows / nrow(data)\n```\nThere are `r format(numOfNARows, big.mark = \",\")` missing values. That is `r format(percentageOfNARows * 100, digits = 4, nsmall = 2)`% of the dataset.  \nFor each missing value, either the mean value for that 5-minute interval (computed from other dates) is used if available, else the mean value for that date is used to fill.\n```{r}\nnewData <- data\nnaRows <- is.na(newData$steps)\nfor (i in 1:nrow(newData[naRows, ])) {\n    interval <- newData[naRows, ][i, \"interval\"]\n    date <- newData[naRows, ][i, \"date\"]\n    steps <- stepsPer5MinInterval[stepsPer5MinInterval$interval == interval, \"steps\"]\n    if (length(steps) != 0){\n        newData[naRows, ][i, \"steps\"] <-\n            stepsPer5MinInterval[stepsPer5MinInterval$interval == interval, \"steps\"]\n    } else {\n        newData[naRows, ][i, \"steps\"] <- mean(cleanData[cleanData$date == date, ]$steps)\n    }\n}\n```\n```{r}\nnewTotalStepsPerDay <- aggregate(newData$steps, by = list(newData$date), FUN = sum)\nnames(newTotalStepsPerDay) <- c(\"date\", \"steps\")\n```\n```{r}\nhist(newTotalStepsPerDay$steps, breaks = 20, ylim = range(0, 20),\n     col = \"gray\", main = \"Histogram of Steps taken per day\", xlab = \"Steps\")\n```\n```{r, echo=FALSE}\nnewMeanStepsPerDay = mean(newTotalStepsPerDay$steps, na.rm = TRUE)\nnewMedianStepsPerDay = median(newTotalStepsPerDay$steps, na.rm = TRUE)\n```\nFrom the imputed dataset:  \n* The mean total number of steps taken per day is `r format(newMeanStepsPerDay, big.mark = \",\", nsmall = 2)`.  \n* The median total number of steps taken per day is `r format(newMedianStepsPerDay, big.mark = \",\")`.  \n\nIt appears that the mean and median values of the imputed dataset do not differ from those of the original dataset.  \n\n## Are there differences in activity patterns between weekdays and weekends?\n```{r}\nnewStepsPer5MinInterval <- aggregate(newData$steps, by = list(newData$interval, newData$IsWeekend), FUN = mean)\nnames(newStepsPer5MinInterval) <- c(\"interval\", \"IsWeekend\", \"steps\")\nlibrary(lattice)\nxyplot(steps ~ interval | IsWeekend, data = newStepsPer5MinInterval, type = \"l\",\n       xlab = \"Interval\", ylab = \"Number of Steps\", layout = c(1, 2))\n```",
    "created" : 1416024186778.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3294599745",
    "id" : "CDD29496",
    "lastKnownWriteTime" : 1416117814,
    "path" : "C:/GitHub/RepData_PeerAssessment1/PA1_template.Rmd",
    "project_path" : "PA1_template.Rmd",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_markdown"
}