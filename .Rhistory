head(newData)
newData <- data
newData[is.na(newData$steps), ]
head(newData)
newData[is.na(newData$steps), steps]
newData[is.na(newData$steps), "steps"]
newData <- data
newData[is.na(newData$steps), "steps"] <- mean(stepsPer5MinInterval$steps)
head(data)
head(newData)
newData
length(newData[is.na(newData$steps), ])
nrow(newData[is.na(newData$steps), ])
newData[is.na(newData$steps), ]
newData[is.na(newData$steps), ]
newData
data
newData
newData[is.na(newData$steps), ]
newData <- data
newData[is.na(newData$steps), ]
length(newData[is.na(newData$steps), ])
nrow(newData[is.na(newData$steps), ])
newData[is.na(newData$steps), ][1]
newData[is.na(newData$steps), ][1, ]
newData[is.na(newData$steps), ][1, "steps"]
newData[is.na(newData$steps), ][1, "interval"]
stepsPer5MinInterval[1, ]
stepsPer5MinInterval[stepsPer5MinInterval$interval == 0, ]
stepsPer5MinInterval[stepsPer5MinInterval$interval == 0, "steps"]
newData <- data
for (i in 1:newData[is.na(newData$steps), ]) {
interval <- newData[is.na(newData$steps), ][i, "interval"]
newData[is.na(newData$steps), ][i, "steps"] <-
stepsPer5MinInterval[stepsPer5MinInterval$interval == interval, "steps"]
}
newData <- data
for (i in 1:nrow(newData[is.na(newData$steps), ])) {
interval <- newData[is.na(newData$steps), ][i, "interval"]
newData[is.na(newData$steps), ][i, "steps"] <-
stepsPer5MinInterval[stepsPer5MinInterval$interval == interval, "steps"]
}
newData <- data
for (i in 1:nrow(newData[is.na(newData$steps), ])) {
interval <- newData[is.na(newData$steps), ][i, "interval"]
newData[is.na(newData$steps), ][i, "steps"] <-
stepsPer5MinInterval[stepsPer5MinInterval$interval == interval, "steps"]
}
newData
head(newData)
newData <- data
for (i in 1:nrow(newData[is.na(newData$steps), ])) {
interval <- newData[is.na(newData$steps), ][i, "interval"]
print interval
newData[is.na(newData$steps), ][i, "steps"] <-
stepsPer5MinInterval[stepsPer5MinInterval$interval == interval, "steps"]
}
newData <- data
for (i in 1:nrow(newData[is.na(newData$steps), ])) {
interval <- newData[is.na(newData$steps), ][i, "interval"]
printf(interval)
newData[is.na(newData$steps), ][i, "steps"] <-
stepsPer5MinInterval[stepsPer5MinInterval$interval == interval, "steps"]
}
newData <- data
for (i in 1:nrow(newData[is.na(newData$steps), ])) {
interval <- newData[is.na(newData$steps), ][i, "interval"]
print(interval)
newData[is.na(newData$steps), ][i, "steps"] <-
stepsPer5MinInterval[stepsPer5MinInterval$interval == interval, "steps"]
}
head(data)
data[is.na(data$interval), ]
newData <- data
for (i in 1:nrow(newData[is.na(newData$steps), ])) {
interval <- newData[is.na(newData$steps), ][i, "interval"]
print(stepsPer5MinInterval[stepsPer5MinInterval$interval == interval, "steps"])
newData[is.na(newData$steps), ][i, "steps"] <-
stepsPer5MinInterval[stepsPer5MinInterval$interval == interval, "steps"]
}
stepsPer5MinInterval
data[data$interval == 60, ]
data[data$interval == 65, ]
data[data$interval == 65, "steps"]
data[data$interval == 65, "steps"] == 0
data[data$interval == 65, "steps"] == null
data[data$interval == 65, "steps"]
length(data[data$interval == 65, "steps"])
length(data[data$interval == 65, "steps"]) == 0
newData <- data
for (i in 1:nrow(newData[is.na(newData$steps), ])) {
interval <- newData[is.na(newData$steps), ][i, "interval"]
steps <- stepsPer5MinInterval[stepsPer5MinInterval$interval == interval, "steps"]
if (length(steps) == 0){
newData[is.na(newData$steps), ][i, "steps"] <-
stepsPer5MinInterval[stepsPer5MinInterval$interval == interval, "steps"]
} else {
newData[is.na(newData$steps), ][i, "steps"] <-
mean(stepsPer5MinInterval$steps)
}
}
warnings()
newData
head(newData)
newData[is.na(newData$steps), ]
newData <- data
for (i in 1:nrow(newData[is.na(newData$steps), ])) {
interval <- newData[is.na(newData$steps), ][i, "interval"]
steps <- stepsPer5MinInterval[stepsPer5MinInterval$interval == interval, "steps"]
if (length(steps) != 0){
newData[is.na(newData$steps), ][i, "steps"] <-
stepsPer5MinInterval[stepsPer5MinInterval$interval == interval, "steps"]
} else {
newData[is.na(newData$steps), ][i, "steps"] <-
mean(stepsPer5MinInterval$steps)
}
}
stepsPer5MinInterval
mean(stepsPer5MinInterval$steps)
head(newData)
newData[is.na(newData$steps), ][1, "interval"]
newData[is.na(newData$steps), ][2, "interval"]
newData[is.na(newData$steps), ][0, "interval"]
newData[is.na(newData$steps), ][1, "interval"]
newData[is.na(newData$steps), ][0, "interval"]
newData[is.na(newData$steps), ][2, "interval"]
newData[is.na(newData$steps), ][3, "interval"]
newData[is.na(newData$steps), ][3]
newData[is.na(newData$steps), ][3, ]
newData[is.na(newData$steps), ]
newData[is.na(newData$steps), ]
head(newData[is.na(newData$steps), ])
head(data)
is.na(newData$steps)
newData <- data
naRows <- is.na(newData$steps)
for (i in 1:nrow(newData[naRows, ])) {
interval <- newData[naRows, ][i, "interval"]
steps <- stepsPer5MinInterval[stepsPer5MinInterval$interval == interval, "steps"]
if (length(steps) != 0){
newData[naRows, ][i, "steps"] <-
stepsPer5MinInterval[stepsPer5MinInterval$interval == interval, "steps"]
} else {
newData[naRows, ][i, "steps"] <-
mean(stepsPer5MinInterval$steps)
}
}
head(data)
head(newData)
newData[newData$interval == 55, ]
newData[newData$interval == 65, ]
newData[newData$interval == 70, ]
data[data$interval == 70, ]
newTotalStepsPerDay <- aggregate(newData$steps, by = list(newData$date), FUN = sum)
names(newTotalStepsPerDay) <- c("date", "steps")
hist(newTotalStepsPerDay$steps, breaks = 20, col = "gray",
main = "Histogram of Steps taken per day", xlab = "Steps")
totalStepsPerDay <- aggregate(data$steps, by = list(data$date), FUN = sum)
names(totalStepsPerDay) <- c("date", "steps")
hist(totalStepsPerDay$steps, breaks = 20, col = "gray",
main = "Histogram of Steps taken per day", xlab = "Steps")
meanStepsPerDay = mean(totalStepsPerDay$steps, na.rm = TRUE)
medianStepsPerDay = median(totalStepsPerDay$steps, na.rm = TRUE)
newTotalStepsPerDay <- aggregate(newData$steps, by = list(newData$date), FUN = sum)
names(newTotalStepsPerDay) <- c("date", "steps")
hist(newTotalStepsPerDay$steps, breaks = 20, col = "gray",
main = "Histogram of Steps taken per day", xlab = "Steps")
totalStepsPerDay <- aggregate(data$steps, by = list(data$date), FUN = sum)
names(totalStepsPerDay) <- c("date", "steps")
hist(totalStepsPerDay$steps, breaks = 20, col = "gray",
main = "Histogram of Steps taken per day", xlab = "Steps")
meanStepsPerDay = mean(totalStepsPerDay$steps, na.rm = TRUE)
medianStepsPerDay = median(totalStepsPerDay$steps, na.rm = TRUE)
newTotalStepsPerDay <- aggregate(newData$steps, by = list(newData$date), FUN = sum)
names(newTotalStepsPerDay) <- c("date", "steps")
hist(newTotalStepsPerDay$steps, breaks = 20, col = "gray",
main = "Histogram of Steps taken per day", xlab = "Steps")
totalStepsPerDay <- aggregate(data$steps, by = list(data$date), FUN = sum)
names(totalStepsPerDay) <- c("date", "steps")
hist(totalStepsPerDay$steps, breaks = 20, col = "gray",
main = "Histogram of Steps taken per day", xlab = "Steps")
meanStepsPerDay = mean(totalStepsPerDay$steps, na.rm = TRUE)
medianStepsPerDay = median(totalStepsPerDay$steps, na.rm = TRUE)
newTotalStepsPerDay <- aggregate(newData$steps, by = list(newData$date), FUN = sum)
names(newTotalStepsPerDay) <- c("date", "steps")
hist(newTotalStepsPerDay$steps, breaks = 20, col = "gray",
main = "Histogram of Steps taken per day", xlab = "Steps")
newMeanStepsPerDay = mean(newTotalStepsPerDay$steps, na.rm = TRUE)
newMedianStepsPerDay = median(newTotalStepsPerDay$steps, na.rm = TRUE)
newMeanStepsPerDay
newMedianStepsPerDay
meanStepsPerDay
medianStepsPerDay
?plot
newTotalStepsPerDay <- aggregate(newData$steps, by = list(newData$date), FUN = sum)
names(newTotalStepsPerDay) <- c("date", "steps")
hist(newTotalStepsPerDay$steps, breaks = 20, ylim = max(newTotalStepsPerDay$steps),
col = "gray", main = "Histogram of Steps taken per day", xlab = "Steps")
newMeanStepsPerDay = mean(newTotalStepsPerDay$steps, na.rm = TRUE)
newMedianStepsPerDay = median(newTotalStepsPerDay$steps, na.rm = TRUE)
?range
newTotalStepsPerDay <- aggregate(newData$steps, by = list(newData$date), FUN = sum)
names(newTotalStepsPerDay) <- c("date", "steps")
hist(newTotalStepsPerDay$steps, breaks = 20, ylim = range(newTotalStepsPerDay$steps),
col = "gray", main = "Histogram of Steps taken per day", xlab = "Steps")
newMeanStepsPerDay = mean(newTotalStepsPerDay$steps, na.rm = TRUE)
newMedianStepsPerDay = median(newTotalStepsPerDay$steps, na.rm = TRUE)
?hist
newTotalStepsPerDay <- aggregate(newData$steps, by = list(newData$date), FUN = sum)
names(newTotalStepsPerDay) <- c("date", "steps")
hist(newTotalStepsPerDay$steps, breaks = 20,
col = "gray", main = "Histogram of Steps taken per day", xlab = "Steps")
newMeanStepsPerDay = mean(newTotalStepsPerDay$steps, na.rm = TRUE)
newMedianStepsPerDay = median(newTotalStepsPerDay$steps, na.rm = TRUE)
newTotalStepsPerDay <- aggregate(newData$steps, by = list(newData$date), FUN = sum)
names(newTotalStepsPerDay) <- c("date", "steps")
hist(newTotalStepsPerDay$steps, breaks = 20, ylim = range(0, 20),
col = "gray", main = "Histogram of Steps taken per day", xlab = "Steps")
newMeanStepsPerDay = mean(newTotalStepsPerDay$steps, na.rm = TRUE)
newMedianStepsPerDay = median(newTotalStepsPerDay$steps, na.rm = TRUE)
totalStepsPerDay <- aggregate(data$steps, by = list(data$date), FUN = sum)
names(totalStepsPerDay) <- c("date", "steps")
hist(totalStepsPerDay$steps, breaks = 20, ylim = range(0, 20),
col = "gray", main = "Histogram of Steps taken per day", xlab = "Steps")
meanStepsPerDay = mean(totalStepsPerDay$steps, na.rm = TRUE)
medianStepsPerDay = median(totalStepsPerDay$steps, na.rm = TRUE)
totalStepsPerDay <- aggregate(data$steps, by = list(data$date), FUN = sum)
names(totalStepsPerDay) <- c("date", "steps")
hist(totalStepsPerDay$steps, breaks = 20, ylim = range(0, 15),
col = "gray", main = "Histogram of Steps taken per day", xlab = "Steps")
meanStepsPerDay = mean(totalStepsPerDay$steps, na.rm = TRUE)
medianStepsPerDay = median(totalStepsPerDay$steps, na.rm = TRUE)
totalStepsPerDay <- aggregate(data$steps, by = list(data$date), FUN = sum)
names(totalStepsPerDay) <- c("date", "steps")
hist(totalStepsPerDay$steps, breaks = 20, ylim = range(0, 10),
col = "gray", main = "Histogram of Steps taken per day", xlab = "Steps")
meanStepsPerDay = mean(totalStepsPerDay$steps, na.rm = TRUE)
medianStepsPerDay = median(totalStepsPerDay$steps, na.rm = TRUE)
newTotalStepsPerDay <- aggregate(newData$steps, by = list(newData$date), FUN = sum)
names(newTotalStepsPerDay) <- c("date", "steps")
hist(newTotalStepsPerDay$steps, breaks = 20, ylim = range(0, 20),
col = "gray", main = "Histogram of Steps taken per day", xlab = "Steps")
newMeanStepsPerDay = mean(newTotalStepsPerDay$steps, na.rm = TRUE)
newMedianStepsPerDay = median(newTotalStepsPerDay$steps, na.rm = TRUE)
totalStepsPerDay <- aggregate(data$steps, by = list(data$date), FUN = sum)
names(totalStepsPerDay) <- c("date", "steps")
hist(totalStepsPerDay$steps, breaks = 20, ylim = range(0, 10),
col = "gray", main = "Histogram of Steps taken per day", xlab = "Steps")
meanStepsPerDay = mean(totalStepsPerDay$steps, na.rm = TRUE)
medianStepsPerDay = median(totalStepsPerDay$steps, na.rm = TRUE)
newTotalStepsPerDay <- aggregate(newData$steps, by = list(newData$date), FUN = sum)
names(newTotalStepsPerDay) <- c("date", "steps")
hist(newTotalStepsPerDay$steps, breaks = 20, ylim = range(0, 20),
col = "gray", main = "Histogram of Steps taken per day", xlab = "Steps")
newMeanStepsPerDay = mean(newTotalStepsPerDay$steps, na.rm = TRUE)
newMedianStepsPerDay = median(newTotalStepsPerDay$steps, na.rm = TRUE)
totalStepsPerDay <- aggregate(data$steps, by = list(data$date), FUN = sum)
names(totalStepsPerDay) <- c("date", "steps")
hist(totalStepsPerDay$steps, breaks = 20, ylim = range(0, 10),
col = "gray", main = "Histogram of Steps taken per day", xlab = "Steps")
meanStepsPerDay = mean(totalStepsPerDay$steps, na.rm = TRUE)
medianStepsPerDay = median(totalStepsPerDay$steps, na.rm = TRUE)
newTotalStepsPerDay <- aggregate(newData$steps, by = list(newData$date), FUN = sum)
names(newTotalStepsPerDay) <- c("date", "steps")
hist(newTotalStepsPerDay$steps, breaks = 20, ylim = range(0, 20),
col = "gray", main = "Histogram of Steps taken per day", xlab = "Steps")
newMeanStepsPerDay = mean(newTotalStepsPerDay$steps, na.rm = TRUE)
newMedianStepsPerDay = median(newTotalStepsPerDay$steps, na.rm = TRUE)
?weekday
?weekdays
weekdays(newTotalStepsPerDay$date)
weekdays(as.date(newTotalStepsPerDay$date)
)
weekdays(as.Date(newTotalStepsPerDay$date))
nrow(newTotalStepsPerDay)
?apply
class(weekdays(as.Date(newTotalStepsPerDay$date)))
apply(weekdays(as.Date(newTotalStepsPerDay$date)), 1, function(d) { if (d == "Saturday" | d == "Sunday") return "Weekend" else return "Weekday" })
apply(weekdays(as.Date(newTotalStepsPerDay$date)), 1, function(d) { if (d == "Saturday" | d == "Sunday") return ("Weekend") else return ("Weekday") })
apply(weekdays(as.Date(newTotalStepsPerDay$date)), 2, function(d) { if (d == "Saturday" | d == "Sunday") return ("Weekend") else return ("Weekday") })
?factor
newTotalStepsPerDay$IsWeekend <- weekdays(as.Date(newTotalStepsPerDay$date)) %in% c("Saturday", "Sunday")
newTotalStepsPerDay$IsWeekend <- weekdays(as.Date(newTotalStepsPerDay$date)) %in% c("Saturday", "Sunday")
newTotalStepsPerDay
?xyplot
??xyplot
with(newTotalStepsPerDay, xyplot(steps ~ interval | IsWeekend))
library(lattice)
with(newTotalStepsPerDay, xyplot(steps ~ interval | IsWeekend))
library(lattice)
with(newTotalStepsPerDay, xyplot(steps ~ interval | IsWeekend, type = "l"))
library(lattice)
xyplot(steps ~ interval | IsWeekend, data = newTotalStepsPerDay)
numOfNARows <- nrow(data[is.na(data$steps), ])
percentageOfNARows <- numOfNARows / nrow(data)
newData <- data
naRows <- is.na(newData$steps)
for (i in 1:nrow(newData[naRows, ])) {
interval <- newData[naRows, ][i, "interval"]
steps <- stepsPer5MinInterval[stepsPer5MinInterval$interval == interval, "steps"]
if (length(steps) != 0){
newData[naRows, ][i, "steps"] <-
stepsPer5MinInterval[stepsPer5MinInterval$interval == interval, "steps"]
} else {
newData[naRows, ][i, "steps"] <- mean(stepsPer5MinInterval$steps)
}
}
newTotalStepsPerDay <- aggregate(newData$steps, by = list(newData$date), FUN = sum)
names(newTotalStepsPerDay) <- c("date", "steps")
hist(newTotalStepsPerDay$steps, breaks = 20, ylim = range(0, 20),
col = "gray", main = "Histogram of Steps taken per day", xlab = "Steps")
newMeanStepsPerDay = mean(newTotalStepsPerDay$steps, na.rm = TRUE)
newMedianStepsPerDay = median(newTotalStepsPerDay$steps, na.rm = TRUE)
newData$IsWeekend <- weekdays(as.Date(newData$date)) %in% c("Saturday", "Sunday")
library(lattice)
xyplot(steps ~ interval | IsWeekend, data = newData)
xyplot(steps ~ interval | IsWeekend, data = newData, type = "l")
library(lattice)
xyplot(steps ~ interval | IsWeekend, data = newData, type = "l",
xlab = "Interval", ylab = "Number of Steps")
newData$IsWeekend
class(newData$IsWeekend)
factor(newData$IsWeekend)
factor(newData$IsWeekend)
?factor
factor(newData$IsWeekend, labels = c("Weekday", "Weekend"))
newData$IsWeekend <- weekdays(as.Date(newData$date)) %in% c("Saturday", "Sunday")
newData$IsWeekend <- factor(newData$IsWeekend, labels = c("Weekday", "Weekend"))
library(lattice)
xyplot(steps ~ interval | IsWeekend, data = newData, type = "l",
xlab = "Interval", ylab = "Number of Steps")
library(lattice)
xyplot(steps ~ interval | IsWeekend, data = newData, type = "l",
xlab = "Interval", ylab = "Number of Steps", layout = c(2, 1))
library(lattice)
xyplot(steps ~ interval | IsWeekend, data = newData, type = "l",
xlab = "Interval", ylab = "Number of Steps", par = c(2, 1))
library(lattice)
xyplot(steps ~ interval | IsWeekend, data = newData, type = "l",
xlab = "Interval", ylab = "Number of Steps", layout = c(1, 2))
library(lattice)
xyplot(steps ~ interval | IsWeekend, data = newData, type = "l",
xlab = "Interval", ylab = "Number of Steps", layout = c(1, 2))
numOfNARows <- nrow(data[is.na(data$steps), ])
percentageOfNARows <- numOfNARows / nrow(data)
newData <- data
naRows <- is.na(newData$steps)
for (i in 1:nrow(newData[naRows, ])) {
interval <- newData[naRows, ][i, "interval"]
steps <- stepsPer5MinInterval[stepsPer5MinInterval$interval == interval, "steps"]
if (length(steps) != 0){
newData[naRows, ][i, "steps"] <-
stepsPer5MinInterval[stepsPer5MinInterval$interval == interval, "steps"]
} else {
newData[naRows, ][i, "steps"] <- mean(stepsPer5MinInterval$steps)
}
}
newTotalStepsPerDay <- aggregate(newData$steps, by = list(newData$date), FUN = sum)
names(newTotalStepsPerDay) <- c("date", "steps")
hist(newTotalStepsPerDay$steps, breaks = 20, ylim = range(0, 20),
col = "gray", main = "Histogram of Steps taken per day", xlab = "Steps")
newMeanStepsPerDay = mean(newTotalStepsPerDay$steps, na.rm = TRUE)
newMedianStepsPerDay = median(newTotalStepsPerDay$steps, na.rm = TRUE)
newStepsPer5MinInterval <- aggregate(newData$steps, by = list(newData$interval), FUN = mean)
names(newStepsPer5MinInterval) <- c("interval", "steps")
newStepsPer5MinInterval$IsWeekend <- weekdays(as.Date(newStepsPer5MinInterval$date)) %in% c("Saturday", "Sunday")
newStepsPer5MinInterval$IsWeekend <- factor(newStepsPer5MinInterval$IsWeekend, labels = c("Weekday", "Weekend"))
library(lattice)
xyplot(steps ~ interval | IsWeekend, data = newStepsPer5MinInterval, type = "l",
xlab = "Interval", ylab = "Number of Steps", layout = c(1, 2))
numOfNARows <- nrow(data[is.na(data$steps), ])
percentageOfNARows <- numOfNARows / nrow(data)
newData <- data
naRows <- is.na(newData$steps)
for (i in 1:nrow(newData[naRows, ])) {
interval <- newData[naRows, ][i, "interval"]
steps <- stepsPer5MinInterval[stepsPer5MinInterval$interval == interval, "steps"]
if (length(steps) != 0){
newData[naRows, ][i, "steps"] <-
stepsPer5MinInterval[stepsPer5MinInterval$interval == interval, "steps"]
} else {
newData[naRows, ][i, "steps"] <- mean(stepsPer5MinInterval$steps)
}
}
newTotalStepsPerDay <- aggregate(newData$steps, by = list(newData$date), FUN = sum)
names(newTotalStepsPerDay) <- c("date", "steps")
hist(newTotalStepsPerDay$steps, breaks = 20, ylim = range(0, 20),
col = "gray", main = "Histogram of Steps taken per day", xlab = "Steps")
newMeanStepsPerDay = mean(newTotalStepsPerDay$steps, na.rm = TRUE)
newMedianStepsPerDay = median(newTotalStepsPerDay$steps, na.rm = TRUE)
newData$IsWeekend <- weekdays(as.Date(newData$date)) %in% c("Saturday", "Sunday")
newData$IsWeekend <- factor(newData$IsWeekend, labels = c("Weekday", "Weekend"))
library(lattice)
xyplot(steps ~ interval | IsWeekend, data = newData, type = "l",
xlab = "Interval", ylab = "Number of Steps", layout = c(1, 2))
numOfNARows <- nrow(data[is.na(data$steps), ])
percentageOfNARows <- numOfNARows / nrow(data)
newData <- data
naRows <- is.na(newData$steps)
for (i in 1:nrow(newData[naRows, ])) {
interval <- newData[naRows, ][i, "interval"]
steps <- stepsPer5MinInterval[stepsPer5MinInterval$interval == interval, "steps"]
if (length(steps) != 0){
newData[naRows, ][i, "steps"] <-
stepsPer5MinInterval[stepsPer5MinInterval$interval == interval, "steps"]
} else {
newData[naRows, ][i, "steps"] <- mean(stepsPer5MinInterval$steps)
}
}
newTotalStepsPerDay <- aggregate(newData$steps, by = list(newData$date), FUN = sum)
names(newTotalStepsPerDay) <- c("date", "steps")
hist(newTotalStepsPerDay$steps, breaks = 20, ylim = range(0, 20),
col = "gray", main = "Histogram of Steps taken per day", xlab = "Steps")
newMeanStepsPerDay = mean(newTotalStepsPerDay$steps, na.rm = TRUE)
newMedianStepsPerDay = median(newTotalStepsPerDay$steps, na.rm = TRUE)
newData$IsWeekend <- weekdays(as.Date(newData$date)) %in% c("Saturday", "Sunday")
newData$IsWeekend <- factor(newData$IsWeekend, labels = c("Weekday", "Weekend"))
newStepsPer5MinInterval <- aggregate(newData$steps, by = list(newData$interval, newData$IsWeekend), FUN = mean)
head(newData)
newStepsPer5MinInterval
names(newStepsPer5MinInterval) <- c("interval", "IsWeekend", "steps")
library(lattice)
xyplot(steps ~ interval | IsWeekend, data = newData, type = "l",
xlab = "Interval", ylab = "Number of Steps", layout = c(1, 2))
names(newStepsPer5MinInterval) <- c("interval", "IsWeekend", "steps")
library(lattice)
xyplot(steps ~ interval | IsWeekend, data = newStepsPer5MinInterval, type = "l",
xlab = "Interval", ylab = "Number of Steps", layout = c(1, 2))
data <- read.table(unz("activity.zip", "activity.csv"), sep = ",", header = TRUE)
data$IsWeekend <- weekdays(as.Date(data$date)) %in% c("Saturday", "Sunday")
data$IsWeekend <- factor(data$IsWeekend, labels = c("Weekday", "Weekend"))
totalStepsPerDay <- aggregate(data$steps, by = list(data$date), FUN = sum)
names(totalStepsPerDay) <- c("date", "steps")
hist(totalStepsPerDay$steps, breaks = 20, ylim = range(0, 10),
col = "gray", main = "Histogram of Steps taken per day", xlab = "Steps")
meanStepsPerDay = mean(totalStepsPerDay$steps, na.rm = TRUE)
medianStepsPerDay = median(totalStepsPerDay$steps, na.rm = TRUE)
cleanData <- data[!is.na(data$steps), ]
stepsPer5MinInterval <- aggregate(cleanData$steps, by = list(cleanData$interval), FUN = mean)
names(stepsPer5MinInterval) <- c("interval", "steps")
with(stepsPer5MinInterval, plot(interval, steps, type = "l", main = "Average # of Steps per interval",
xlab = "Interval", ylab = "Steps", col = "blue"))
maxSteps <- max(stepsPer5MinInterval$steps)
maxStepsInterval <- stepsPer5MinInterval[stepsPer5MinInterval$steps == maxSteps, ]$interval
numOfNARows <- nrow(data[is.na(data$steps), ])
percentageOfNARows <- numOfNARows / nrow(data)
newData <- data
naRows <- is.na(newData$steps)
for (i in 1:nrow(newData[naRows, ])) {
interval <- newData[naRows, ][i, "interval"]
steps <- stepsPer5MinInterval[stepsPer5MinInterval$interval == interval, "steps"]
if (length(steps) != 0){
newData[naRows, ][i, "steps"] <-
stepsPer5MinInterval[stepsPer5MinInterval$interval == interval, "steps"]
} else {
newData[naRows, ][i, "steps"] <- mean(stepsPer5MinInterval$steps)
}
}
newTotalStepsPerDay <- aggregate(newData$steps, by = list(newData$date), FUN = sum)
names(newTotalStepsPerDay) <- c("date", "steps")
hist(newTotalStepsPerDay$steps, breaks = 20, ylim = range(0, 20),
col = "gray", main = "Histogram of Steps taken per day", xlab = "Steps")
newMeanStepsPerDay = mean(newTotalStepsPerDay$steps, na.rm = TRUE)
newMedianStepsPerDay = median(newTotalStepsPerDay$steps, na.rm = TRUE)
newStepsPer5MinInterval <- aggregate(newData$steps, by = list(newData$interval, newData$IsWeekend), FUN = mean)
names(newStepsPer5MinInterval) <- c("interval", "IsWeekend", "steps")
library(lattice)
xyplot(steps ~ interval | IsWeekend, data = newStepsPer5MinInterval, type = "l",
xlab = "Interval", ylab = "Number of Steps", layout = c(1, 2))
cleanData
cleanData[cleanData$date == "2012-10-11", ]
nrow(cleanData[cleanData$date == "2012-10-11", ])
mean(cleanData[cleanData$date == "2012-10-11", ]$steps)
max(cleanData[cleanData$date == "2012-10-11", ]$steps)
min(cleanData[cleanData$date == "2012-10-11", ]$steps)
numOfNARows <- nrow(data[is.na(data$steps), ])
percentageOfNARows <- numOfNARows / nrow(data)
newData <- data
naRows <- is.na(newData$steps)
for (i in 1:nrow(newData[naRows, ])) {
interval <- newData[naRows, ][i, "interval"]
date <- newData[naRows, ][i, "date"]
steps <- stepsPer5MinInterval[stepsPer5MinInterval$interval == interval, "steps"]
if (length(steps) != 0){
newData[naRows, ][i, "steps"] <-
stepsPer5MinInterval[stepsPer5MinInterval$interval == interval, "steps"]
} else {
newData[naRows, ][i, "steps"] <- mean(cleanData[cleanData$date == date, ]$steps)
}
}
newTotalStepsPerDay <- aggregate(newData$steps, by = list(newData$date), FUN = sum)
names(newTotalStepsPerDay) <- c("date", "steps")
hist(newTotalStepsPerDay$steps, breaks = 20, ylim = range(0, 20),
col = "gray", main = "Histogram of Steps taken per day", xlab = "Steps")
newMeanStepsPerDay = mean(newTotalStepsPerDay$steps, na.rm = TRUE)
newMedianStepsPerDay = median(newTotalStepsPerDay$steps, na.rm = TRUE)
newStepsPer5MinInterval <- aggregate(newData$steps, by = list(newData$interval, newData$IsWeekend), FUN = mean)
names(newStepsPer5MinInterval) <- c("interval", "IsWeekend", "steps")
library(lattice)
xyplot(steps ~ interval | IsWeekend, data = newStepsPer5MinInterval, type = "l",
xlab = "Interval", ylab = "Number of Steps", layout = c(1, 2))
nrow(data)
nrow(cleanData)
nrow(newData)
totalStepsPerDay
newtotalStepsPerDay
newotalStepsPerDay
newTalStepsPerDay
newTotalStepsPerDay
totalStepsPerDay
totalStepsPerDay
newTotalStepsPerDay
